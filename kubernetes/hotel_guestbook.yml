apiVersion: v1
kind: Namespace
metadata:
  name: dev


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: dev
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: redis-master
        image: k8s.gcr.io/redis:e2e
        command:
        - redis-server
        - "/redis-master/redis.conf"
        env:
        - name: master
          value: "true"
        volumeMounts:
        - mountPath: /redis-master
          name: config
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 6379
      volumes:
        - name: config
          configMap:
            name: redis-master-config
            items:
            - key: redis-master-config 
              path: redis.conf

---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: dev
  labels:
    app: redis
    role: master
    tier: backend
spec:
  selector:
    app: redis
    role: master
    tier: backend
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: v1
data:
  redis-master-config: |-
    maxmemory 2mb
    maxmemory-policy allkeys-lru
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: redis-master-config
  namespace: dev


---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: redis-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: redis
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: gcr.io/google-samples/gb-redis-follower:v1
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: forntend
spec:
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: php-redis
        image: gcr.io/google-samples/gb-frontend:v4
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: GET_HOSTS_FROM
          value: env
        - name: REDIS_SLAVE_SERVICE_HOST
          value: redis-replica
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
#  type: NodePort
  type: LoadBalancer
  selector:
    app: guestbook
    tier: frontend
  ports:
  - port: 80
    targetPort: 80
