pipeline {

    agent {
                docker {
                    image 'maven:3.8.6-openjdk-11-slim' 
                }
         }

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }
    environment {
    ENV = "QA"
    pipelineowner = "qateam"
    owner_email = "qa@org.com"
    username = credentials('FlewBirds') // credentials('credentials-id')
}
    
    stages {
        stage('Build') {
            // agent { 
           // label 'linux'
           // } 
            steps {
                sh 'mkdir -p test'
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'test']], userRemoteConfigs: [[credentialsId: "${username}", url: 'https://github.com/FlewBirds/eagle.git']]])
                echo "you are in evironment: ${ENV}"
                echo "Owner of this job is: ${owner}"
                echo "Owner email is: ${owner_email}"
                sh 'mvn --version'
                sh 'ls -lrth test/'
                // Get some code from a GitHub repository
                git 'https://github.com/jglick/simple-maven-project-with-tests.git'

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        
         post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        
 
    }
}
